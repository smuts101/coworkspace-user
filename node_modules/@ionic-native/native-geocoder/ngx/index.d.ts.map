{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappingssourcesContent":["import { IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Native Geocoder\n * @description\n * Cordova plugin for native forward and reverse geocoding\n *\n * @usage\n * ```typescript\n * import { NativeGeocoder, NativeGeocoderResult, NativeGeocoderOptions } from '@ionic-native/native-geocoder/ngx';\n *\n * constructor(private nativeGeocoder: NativeGeocoder) { }\n *\n * ...\n *\n * let options: NativeGeocoderOptions = {\n *     useLocale: true,\n *     maxResults: 5\n * };\n *\n * this.nativeGeocoder.reverseGeocode(52.5072095, 13.1452818, options)\n *   .then((result: NativeGeocoderResult[]) => console.log(JSON.stringify(result[0])))\n *   .catch((error: any) => console.log(error));\n *\n * this.nativeGeocoder.forwardGeocode('Berlin', options)\n *   .then((result: NativeGeocoderResult[]) => console.log('The coordinates are latitude=' + result[0].latitude + ' and longitude=' + result[0].longitude))\n *   .catch((error: any) => console.log(error));\n * ```\n * @interfaces\n * NativeGeocoderResult\n * NativeGeocoderOptions\n */\nexport declare class NativeGeocoder extends IonicNativePlugin {\n    /**\n     * Reverse geocode a given latitude and longitude to find location address\n     * @param latitude {number} The latitude\n     * @param longitude {number} The longitude\n     * @param options {NativeGeocoderOptions} The options\n     * @return {Promise<NativeGeocoderResult[]>}\n     */\n    reverseGeocode(latitude: number, longitude: number, options?: NativeGeocoderOptions): Promise<NativeGeocoderResult[]>;\n    /**\n     * Forward geocode a given address to find coordinates\n     * @param addressString {string} The address to be geocoded\n     * @param options {NativeGeocoderOptions} The options\n     * @return {Promise<NativeGeocoderResult[]>}\n     */\n    forwardGeocode(addressString: string, options?: NativeGeocoderOptions): Promise<NativeGeocoderResult[]>;\n}\n/**\n * Encapsulates format information about a geocoding result.\n * more Info:\n *  - https://developer.apple.com/documentation/corelocation/clplacemark\n *  - https://developer.android.com/reference/android/location/Address.html\n */\nexport interface NativeGeocoderResult {\n    /**\n     * The latitude.\n     */\n    latitude: string;\n    /**\n     * The longitude.\n     */\n    longitude: string;\n    /**\n     * The country code.\n     */\n    countryCode: string;\n    /**\n     * The country name.\n     */\n    countryName: string;\n    /**\n     * The postal code.\n     */\n    postalCode: string;\n    /**\n     * The administrativeArea.\n     */\n    administrativeArea: string;\n    /**\n     * The subAdministrativeArea.\n     */\n    subAdministrativeArea: string;\n    /**\n     * The locality.\n     */\n    locality: string;\n    /**\n     * The subLocality.\n     */\n    subLocality: string;\n    /**\n     * The thoroughfare.\n     */\n    thoroughfare: string;\n    /**\n     * The subThoroughfare.\n     */\n    subThoroughfare: string;\n    /**\n     * The areasOfInterest\n     */\n    areasOfInterest: string[];\n}\n/**\n * Options for reverse and forward geocoding.\n */\nexport interface NativeGeocoderOptions {\n    /**\n     * The locale to use when returning the address information.\n     * If set to 'false' the locale will always be 'en_US'.\n     * Default is 'true'\n     */\n    useLocale: boolean;\n    /**\n     * The default locale to use when returning the address information.\n     * e.g.: 'fa-IR' or 'de_DE'.\n     */\n    defaultLocale?: string;\n    /**\n     * The maximum number of result to return (max is 5).\n     * Default is 1\n     */\n    maxResults: number;\n}\n"]}