{"version":3,"sources":["webpack:///src/app/tab1/tab1.page.html","webpack:///src/app/tab1/tab1.module.ts","webpack:///src/app/tab1/tab1.page.scss","webpack:///src/app/tab1/tab1.page.ts"],"names":["Tab1PageModule","imports","forChild","path","component","declarations","Geolocation","Tab1Page","nativeGeocoder","getCurrentPosition","coordinates","console","log","coords","options","useLocale","maxResults","reverseGeocode","latitude","longitude","then","result","address","error","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCgBFA,cAAc;AAAA;AAAA,O;;AAAdA,oBAAc,6DAT1B,+DAAS;AACRC,eAAO,EAAE,CACP,0DADO,EAEP,4DAFO,EAGP,0DAHO,EAIP,6DAAaC,QAAb,CAAsB,CAAC;AAAEC,cAAI,EAAE,EAAR;AAAYC,mBAAS,EAAE;AAAvB,SAAD,CAAtB,CAJO,CADD;AAORC,oBAAY,EAAE,CAAC,mDAAD;AAPN,OAAT,CAS0B,GAAdL,cAAc,CAAd;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCEPM,W,GAAgB,uD,CAAhBA,W;;UAOKC,QAAQ;AAGnB,0BAAoBC,cAApB,EAAoD;AAAA;;AAAhC,eAAAA,cAAA,GAAAA,cAAA;AAAmC;;AAHpC;AAAA;AAAA,mCAIJ;;;;;;;;AACO,6BAAMF,WAAW,CAACG,kBAAZ,EAAN;;;AAAdC,iC;AACNC,6BAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,WAAvB;AACA,2BAAKG,MAAL,GAAcH,WAAW,CAACG,MAA1B;;;;;;;;;AACD;AARkB;AAAA;AAAA,2CASI;;;;;;;;;0BAChB,KAAKA,M;;;;;;AACY,6BAAMP,WAAW,CAACG,kBAAZ,EAAN;;;AAAdC,iC;AACN,2BAAKG,MAAL,GAAcH,WAAW,CAACG,MAA1B;;;AAEEC,6B,GAAiC;AACnCC,iCAAS,EAAE,IADwB;AAEnCC,kCAAU,EAAE;AAFuB,uB;AAIrC,2BAAKR,cAAL,CAAoBS,cAApB,CAAmC,KAAKJ,MAAL,CAAYK,QAA/C,EAAyD,KAAKL,MAAL,CAAYM,SAArE,EAAgFL,OAAhF,EACGM,IADH,CACQ,UAACC,MAAD,EAAoC;AACxCV,+BAAO,CAACC,GAAR,CAAYS,MAAZ;AACA,6BAAI,CAACC,OAAL,GAAeD,MAAM,CAAC,CAAD,CAArB;AACD,uBAJH,WAKS,UAACE,KAAD;AAAA,+BAAgBZ,OAAO,CAACC,GAAR,CAAYW,KAAZ,CAAhB;AAAA,uBALT;;;;;;;;;AAMD;AAxBkB;;AAAA;AAAA,S;;;;gBANZ;;;;AAMIhB,cAAQ,6DALpB,gEAAU;AACTiB,gBAAQ,EAAE,UADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,0FAFS;;;;AAAA,OAAV,CAKoB,GAARlB,QAAQ,CAAR","file":"tab1-tab1-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>\\n      Geolocation\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card class=\\\"welcome-card\\\">\\n\\n    <ion-card-header>\\n      <ion-card-subtitle>Get coordinates</ion-card-subtitle>\\n      <ion-card-title>Geolocation</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <p>Click to get your device's location in Latitude and Longitude. Allow the app the required permissions once\\n        asked.</p>\\n      <ion-row *ngIf=\\\"coords && coords.latitude\\\">\\n        <ion-text class=\\\"coords\\\">My Latitude : {{coords.latitude}}</ion-text>\\n      </ion-row>\\n      <ion-row *ngIf=\\\"coords && coords.longitude\\\">\\n        <ion-text class=\\\"coords\\\">My Longitude : {{coords.longitude}}</ion-text>\\n      </ion-row>\\n      <ion-button (click)=\\\"locate()\\\" expand=\\\"full\\\">Locate Me</ion-button>\\n\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card class=\\\"welcome-card\\\">\\n\\n    <ion-card-header>\\n      <ion-card-subtitle>Get Address</ion-card-subtitle>\\n      <ion-card-title>Reverse Geocoding</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <p>Convert your current location into address</p>\\n      <ion-row *ngIf=\\\"address\\\">\\n        <ion-text class=\\\"coords\\\">My Address : {{address.subLocality ? address.subLocality +', ' : ''}}\\n          {{address.locality ? address.locality +', ' : ''}}{{address.administrativeArea ? address.administrativeArea +', ' : ''}}\\n          {{address.postalCode ? address.postalCode +', ' : ''}}{{address.countryName ? address.countryName : ''}}\\n        </ion-text>\\n      </ion-row>\\n      <ion-button (click)=\\\"reverseGeocode()\\\" expand=\\\"full\\\">Get My Address</ion-button>\\n\\n    </ion-card-content>\\n  </ion-card>\\n\\n</ion-content>\";","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab1Page } from './tab1.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: Tab1Page }])\n  ],\n  declarations: [Tab1Page]\n})\nexport class Tab1PageModule {}\n","export default \".welcome-card img {\\n  max-height: 35vh;\\n  overflow: hidden;\\n}\\n\\n.coords {\\n  padding: 5px;\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFiMS90YWIxLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFBO0VBQ0EsZ0JBQUE7QUFDRjs7QUFDQTtFQUNFLFlBQUE7RUFDQSxpQkFBQTtBQUVGIiwiZmlsZSI6InNyYy9hcHAvdGFiMS90YWIxLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi53ZWxjb21lLWNhcmQgaW1nIHtcbiAgbWF4LWhlaWdodDogMzV2aDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5jb29yZHMge1xuICBwYWRkaW5nOiA1cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuIl19 */\";","import { Component } from '@angular/core';\nimport { Plugins } from '@capacitor/core';\nconst { Geolocation } = Plugins;\nimport { NativeGeocoder, NativeGeocoderResult, NativeGeocoderOptions } from '@ionic-native/native-geocoder/ngx';\n@Component({\n  selector: 'app-tab1',\n  templateUrl: 'tab1.page.html',\n  styleUrls: ['tab1.page.scss']\n})\nexport class Tab1Page {\n  coords: any;\n  address: any;\n  constructor(private nativeGeocoder: NativeGeocoder) { }\n  async locate() {\n    const coordinates = await Geolocation.getCurrentPosition();\n    console.log('Current', coordinates);\n    this.coords = coordinates.coords;\n  }\n  async reverseGeocode() {\n    if (!this.coords) {\n      const coordinates = await Geolocation.getCurrentPosition();\n      this.coords = coordinates.coords;\n    }\n    let options: NativeGeocoderOptions = {\n      useLocale: true,\n      maxResults: 5\n    };\n    this.nativeGeocoder.reverseGeocode(this.coords.latitude, this.coords.longitude, options)\n      .then((result: NativeGeocoderResult[]) => {\n        console.log(result);\n        this.address = result[0];\n      })\n      .catch((error: any) => console.log(error));\n  }\n}\n"]}