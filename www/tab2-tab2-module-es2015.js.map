{"version":3,"sources":["./src/app/tab2/tab2.page.html","./src/app/tab2/tab2.module.ts","./src/app/tab2/tab2.page.scss","./src/app/tab2/tab2.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,qpCAAslC,KAAK,mJAAmJ,KAAK,2KAA2K,E;;;;;;;;;;;;;;;;;;;;;;;ACAh4C;AACE;AACN;AACM;AACF;AACN;AACG;IAY7B,cAAc,SAAd,cAAc;CAAI;AAAlB,cAAc;IAV1B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,0DAAW;YACX,4DAAY;YACZ,0DAAW;YACX,uDAAa;YACb,4DAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mDAAQ,EAAE,CAAC,CAAC;SAC3D;QACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;KACzB,CAAC;GACW,cAAc,CAAI;AAAJ;;;;;;;;;;;;;AClB3B;AAAe,yEAAU,iBAAiB,GAAG,sBAAsB,kBAAkB,GAAG,kBAAkB,4BAA4B,iBAAiB,GAAG,6CAA6C,+eAA+e,E;;;;;;;;;;;;;;;;;;;ACApoB;AACR;AAC1C,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,uDAAO,CAAC;AACyE;IAMnG,QAAQ,SAAR,QAAQ;IAKnB,YAAoB,cAA8B,EAAU,MAAc;QAAtD,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAF1E,mBAAc,GAAY,IAAI,CAAC;IAE+C,CAAC;IAE/E,QAAQ;QACN,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAEK,kBAAkB;;YACtB,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,kBAAkB,EAAE,CAAC;YAC3D,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE;gBACnB,IAAI,CAAC,GAAG,GAAG,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC;gBACvC,IAAI,CAAC,GAAG,GAAG,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC;YAC1C,CAAC,CAAC;YACF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC;KAAA;IAEK,OAAO;;YACX,IAAI,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE;gBACtB,IAAI,OAAO,GAA0B;oBACnC,SAAS,EAAE,IAAI;oBACf,UAAU,EAAE,CAAC;iBACd,CAAC;gBACF,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC;qBACtD,IAAI,CAAC,CAAC,MAA8B,EAAE,EAAE;oBACvC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE;wBACnB,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;wBAC1C,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;wBAC3C,6BAA6B;wBAC7B,+FAA+F;oBACjG,CAAC,CAAC;oBACF,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC9B,CAAC,CAAC;qBACD,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;aAC9C;iBACI;gBACH,MAAM,KAAK,CAAC,IAAI,CAAC;oBACf,IAAI,EAAE,+BAA+B;iBACtC,CAAC,CAAC;aACJ;QACH,CAAC;KAAA;CACF;;YAlDQ,gFAAc;YAHH,oDAAM;;AASb,QAAQ;IALpB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,8MAA6B;;KAE9B,CAAC;GACW,QAAQ,CA4CpB;AA5CoB","file":"tab2-tab2-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>\\n      Google Map\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <agm-map [usePanning]=\\\"true\\\" [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [zoom]=\\\"12\\\" [disableDefaultUI]=\\\"false\\\">\\n    <agm-marker [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [markerDraggable]=true></agm-marker>\\n  </agm-map>\\n  <ion-grid class=\\\"status-grid\\\">\\n    <ion-row>\\n      <ion-col *ngIf=\\\"showingCurrent\\\">\\n        Showing Current Location\\n      </ion-col>\\n      <ion-col *ngIf=\\\"!showingCurrent\\\">\\n        Showing Geocoded Location\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n  <ion-button color=\\\"success\\\" (click)=\\\"setCurrentPosition()\\\" expand=\\\"full\\\" class=\\\"ion-margin\\\">Show My Location\\n  </ion-button>\\n\\n  <ion-item>\\n    <ion-label position=\\\"stacked\\\">Enter Address to Geocode</ion-label>\\n    <ion-input type=\\\"text\\\" [(ngModel)]=\\\"address\\\" name=\\\"address\\\"></ion-input>\\n  </ion-item>\\n  <ion-row class=\\\"ion-padding-horizontal ion-padding-top\\\" *ngIf=\\\"!showingCurrent\\\">\\n    <ion-text class=\\\"coords\\\">My Latitude : {{lat}}</ion-text>\\n  </ion-row>\\n  <ion-row class=\\\"ion-padding-horizontal\\\" *ngIf=\\\"!showingCurrent\\\">\\n    <ion-text class=\\\"coords\\\">My Longitude : {{lng}}</ion-text>\\n  </ion-row>\\n  <ion-button color=\\\"success\\\" (click)=\\\"geocode()\\\" expand=\\\"full\\\" class=\\\"ion-margin\\\">\\n    Geocode Address</ion-button>\\n\\n</ion-content>\";","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab2Page } from './tab2.page';\nimport { AgmCoreModule } from '@agm/core';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    AgmCoreModule,\n    RouterModule.forChild([{ path: '', component: Tab2Page }])\n  ],\n  declarations: [Tab2Page]\n})\nexport class Tab2PageModule { }\n","export default \"agm-map {\\n  height: 50vh;\\n}\\n\\nagm-map .gm-svpc {\\n  display: none;\\n}\\n\\n.status-grid {\\n  background-color: black;\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFiMi90YWIyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQUE7QUFDRjs7QUFHRTtFQUNFLGFBQUE7QUFBSjs7QUFHQTtFQUNFLHVCQUFBO0VBQ0EsWUFBQTtBQUFGIiwiZmlsZSI6InNyYy9hcHAvdGFiMi90YWIyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImFnbS1tYXAge1xuICBoZWlnaHQ6IDUwdmg7XG59XG5cbmFnbS1tYXAge1xuICAuZ20tc3ZwYyB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuLnN0YXR1cy1ncmlkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cbiJdfQ== */\";","import { Component, NgZone } from '@angular/core';\nimport { Plugins } from '@capacitor/core';\nconst { Geolocation, Toast } = Plugins;\nimport { NativeGeocoder, NativeGeocoderResult, NativeGeocoderOptions } from '@ionic-native/native-geocoder/ngx';\n@Component({\n  selector: 'app-tab2',\n  templateUrl: 'tab2.page.html',\n  styleUrls: ['tab2.page.scss']\n})\nexport class Tab2Page {\n  public lat: any;\n  public lng: any;\n  showingCurrent: boolean = true;\n  address: string;\n  constructor(private nativeGeocoder: NativeGeocoder, private ngZone: NgZone) { }\n\n  ngOnInit() {\n    this.setCurrentPosition();\n  }\n\n  async setCurrentPosition() {\n    const coordinates = await Geolocation.getCurrentPosition();\n    this.ngZone.run(() => {\n      this.lat = coordinates.coords.latitude;\n      this.lng = coordinates.coords.longitude;\n    })\n    this.showingCurrent = true;\n  }\n\n  async geocode() {\n    if (this.address != \"\") {\n      let options: NativeGeocoderOptions = {\n        useLocale: true,\n        maxResults: 5\n      };\n      this.nativeGeocoder.forwardGeocode(this.address, options)\n        .then((result: NativeGeocoderResult[]) => {\n          this.ngZone.run(() => {\n            this.lat = parseFloat(result[0].latitude);\n            this.lng = parseFloat(result[0].longitude);\n            // this.myMap.triggerResize()\n            //   .then(() => (this.myMap as any)._mapsWrapper.setCenter({ lat: this.lat, lng: this.lng }));\n          })\n          this.showingCurrent = false;\n        })\n        .catch((error: any) => console.log(error));\n    }\n    else {\n      await Toast.show({\n        text: 'Please add address to Geocode'\n      });\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}